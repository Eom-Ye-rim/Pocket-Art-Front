import 'dart:convert';
import 'dart:io';

import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:flutter_ar_example/style/Sketch.dart';
import 'package:http/http.dart' as http;
import '../mainpage/MainPage.dart';
import 'ChangeStyle.dart';
import 'package:path/path.dart' as p;


// Generated by: https://www.figma.com/community/plugin/842128343887142055/
class Choice extends StatefulWidget {
   File ? selectImg;

  Choice({Key? key, required this.selectImg}) : super(key: key);

  @override
  _ChoiceState createState() => _ChoiceState();
}
class _ChoiceState extends State<Choice> {

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      theme: ThemeData.light().copyWith(

        scaffoldBackgroundColor: Colors.white,
      ),
      home: Scaffold(

        appBar: AppBar(
          systemOverlayStyle: SystemUiOverlayStyle(
            statusBarIconBrightness: Brightness.dark,
            statusBarBrightness: Brightness.light,
          ),
          automaticallyImplyLeading: true,
          backgroundColor: Colors.transparent,
          elevation: 0.0,

          leading: IconButton(
            icon: Icon(Icons.arrow_back_ios,
              color: Colors.black,),
            onPressed: () {
              //뒤로가기
              Navigator.pop(context);
            },
          ),
        ),
        body:
        Frame427320722(selectImg: widget.selectImg ?? File("default_path")),

      ),
    );
  }
}

class Frame427320722 extends StatefulWidget {
  final File selectImg;

  String type = "";


  Frame427320722({Key? key, required this.selectImg}) : super(key: key);

  @override
  Frame createState() => Frame();
}
class Frame extends State<Frame427320722> {

  @override
  Widget build(BuildContext context) {
    File file=widget.selectImg;
    return Column(
      children: [
        Container(
          width:  MediaQuery.of(context).size.width,
          height: 792,
          clipBehavior: Clip.antiAlias,

          decoration: BoxDecoration(
            image: DecorationImage(
              image: AssetImage('images/test.png'),
              fit: BoxFit.cover,
            ),
          ),
          child: Stack(
            children: [
              Positioned(
                left: 80,
                top: 46,
                child: Text(
                  '이미지 변환을 도와드릴게요.\n원하는 스타일을 선택해주세요.',
                  textAlign: TextAlign.center,
                  style: TextStyle(
                    color: Colors.black,
                    fontSize: 20,
                    fontFamily: 'Apple SD Gothic Neo',
                    fontWeight: FontWeight.w700,
                  ),
                ),
              ),
              Positioned(
                  left: 23,
                  top: 518,
                  child: FilledButton(
                    style: ButtonStyle(
                      backgroundColor:
                      MaterialStateProperty.all<Color>(
                          Colors.transparent),
                    ),
                    onPressed: () {
                      if(widget.type=="styleChange") {
                        // Navigate to the ChangeStyle screen when clicked
                        Navigator.of(context).push(
                          MaterialPageRoute(builder: (context) =>
                              ChangeStyle(selectImg: file)),
                        );
                      }
                      else{
                        String filePath = file.path;

                        // 파일 경로에서 파일 이름 추출
                        String fileName = p.basename(filePath);
                        print("filePath + $filePath");
                        print("fileName + $fileName");

                       sendImageToServer(context, file);
                      }
                    },
                    child: Container(
                      width: 342,
                      height: 56,
                      decoration: ShapeDecoration(
                        color: Color(0xFF363636),
                        shape: RoundedRectangleBorder(
                          borderRadius: BorderRadius.circular(32.50),
                        ),
                        shadows: [
                          BoxShadow(
                            color: Color(0x3F000000),
                            blurRadius: 9,
                            offset: Offset(0, 0),
                            spreadRadius: 0,
                          )
                        ],
                      ),
                    ),
                  )),
              Positioned(
                left: 185,
                top: 533,
                child: Text(
                  '다음',
                  style: TextStyle(
                    color: Colors.white,
                    fontSize: 20,
                    fontFamily: 'Apple SD Gothic Neo',
                    fontWeight: FontWeight.w700,
                  ),
                ),
              ),
              Positioned(
                left: 27,
                top: 181,
                child: Container(
                  width: 168,
                  height: 276,
                  decoration: BoxDecoration(
                    color: Color(0xD7FFFFFF), // Change this color to your desired background color
                    // Optional: To round the corners
                    border: Border.all(
                      width: 2,
                      color: Colors.black.withOpacity(0.30000001192092896),
                    ),
                    boxShadow: [
                      BoxShadow(
                        color: Color(0x3F000000),
                        blurRadius: 10,
                        offset: Offset(0, 0),
                        spreadRadius: 0,
                      )
                    ],
                  ),
                ),
              ),
              Positioned(
                left: 205,
                top: 181,
                child: Container(
                  width: 168,
                  height: 276,
                  decoration: BoxDecoration(
                    color: Color(0xD7FFFFFF), // Change this color to your desired background color
                    // Optional: To round the corners
                    border: Border.all(
                      width: 2,
                      color: Colors.black.withOpacity(0.30000001192092896),
                    ),
                    boxShadow: [
                      BoxShadow(
                        color: Color(0x3F000000),
                        blurRadius: 10,
                        offset: Offset(0, 0),
                        spreadRadius: 0,
                      )
                    ],
                  ),
                ),
              ),
              Positioned(
                left: 45,
                top: 356,
                child: Text(
                  '스케치선 만들기',
                  style: TextStyle(
                    color: Color(0xFF1C1C1C),
                    fontSize: 20,
                    fontFamily: 'Apple SD Gothic Neo',
                    fontWeight: FontWeight.w600,
                  ),
                ),
              ),
              Positioned(
                left: 240,
                top: 356,

                child: Text(
                  '화풍 바꾸기',
                  style: TextStyle(
                    color: Color(0xFF1C1C1C),
                    fontSize: 20,
                    fontFamily: 'Apple SD Gothic Neo',
                    fontWeight: FontWeight.w600,
                  ),
                ),
              ),
              Positioned(
                left: 67,
                top: 235,
                child: Container(
                  width: 91,
                  height: 82,
                  decoration: BoxDecoration(
                    image: DecorationImage(
                      image: AssetImage('images/sketch.png'),
                      fit: BoxFit.fill,
                    ),
                  ),
                ),
              ),

              Positioned(
                left: 230,
                top: 235,
                child: FilledButton(
                style: ButtonStyle(
                backgroundColor:
                MaterialStateProperty.all<Color>(
                Colors.transparent),
                ),
                 onPressed: (){
                    setState(() {
                      widget.type="styleChange";
                    });
                  },
                  child:Container(
                    width: 91,
                    height: 82,
                    decoration: BoxDecoration(
                      image: DecorationImage(
                        image: AssetImage('images/style-change.png'),
                        fit: BoxFit.fill,
                      ),
                    ),
                  ),
                ),
              ),
              Positioned(
                left: 0,
                top: 0,
                child: Container(
                  width: 390,
                  height: 92,
                  child: Stack(
                    children: [
                      Positioned(
                        left: 0,
                        top: 0,
                        child: Container(
                          width: 390,
                          height: 46,
                          clipBehavior: Clip.antiAlias,
                          decoration: BoxDecoration(),
                          child: Stack(
                            children: [
                              Positioned(
                                left: 308.67,
                                top: 17.33,
                                child: Container(
                                  width: 66.66,
                                  height: 11.34,
                                  child: Stack(
                                    children: [
                                      Positioned(
                                        left: 42.33,
                                        top: 0,
                                        child: Container(
                                          width: 24.33,
                                          height: 11.33,
                                          child: Stack(children: [
                                          ]),
                                        ),
                                      ),
                                    ],
                                  ),
                                ),
                              ),
                            ],
                          ),
                        ),
                      ),

                    ],
                  ),
                ),
              ),
            ],
          ),
        ),
      ],
    );

  }
}
Future<void> sendImageToServer(BuildContext context, File file) async {
  String sketchImageUrl = "";

  var uri = Uri.parse("http://54.180.79.174:8080/api/v1/sketch");
  var request = http.MultipartRequest('POST', uri);

  // Attach the file as a MultipartFile
  var multipartFile = await http.MultipartFile.fromPath('file', file.path);
  request.files.add(multipartFile);

  try {
    // Send the request
    var response = await request.send();

    if (response.statusCode == 200) {
      final Map<String, dynamic> responseData = json.decode(await response.stream.bytesToString());
      final String data = responseData['data'];

      sketchImageUrl = data;
      print(sketchImageUrl);


      // 이미지가 성공적으로 서버로 업로드되었을 때 화면을 이동하고 싶다면
      // 아래와 같이 Navigator.push를 사용할 수 있습니다.
      Navigator.push(
        context,
        MaterialPageRoute(builder: (context) => Sketch(selectImg: sketchImageUrl)),
      );

      print('Image sent successfully');
    } else {
      print('Error sending image');
    }
  } catch (e) {
    print('Error: $e');
  }
}
